language: rust

rust:
  - 1.17.0
  - stable
  - beta
  - nightly

cache: cargo

install:
  - |
    if [ "${TRAVIS_RUST_VERSION}" = nightly ]; then
        cargo install --force clippy
    fi

script:
  - |
    cargo build --verbose --all --lib --features "${FEATURES}" &&
    cargo test --verbose --all --lib --features "${FEATURES}"
  - |
    # Prefer finer-grained commands
    # Note: --tests flag only appeared in Rust 1.18:
    #   * https://blog.rust-lang.org/2017/06/08/Rust-1.18.html
    #   * https://github.com/rust-lang/cargo/pull/3901
    if [ "${TRAVIS_RUST_VERSION}" != 1.17.0 ]; then
        cargo build --verbose --all --tests --features "${FEATURES}" &&
        cargo test --verbose --all --tests --features "${FEATURES}"
    else
        cargo test --verbose --all --features "${FEATURES}"
    fi
  - |
    if [ "${TRAVIS_RUST_VERSION}" = nightly ]; then
        cargo build --verbose --all --benches --features "${FEATURES}" &&
        cargo test --verbose --all --benches --features "${FEATURES}" &&

        cargo clippy --verbose --all --features "${FEATURES}"
    fi

after_success:
  - |
    # Run benchmarks against master and PR branch
    # Adapted from https://beachape.com/blog/2016/11/02/rust-performance-testing-on-travis-ci/
    if [ "${TRAVIS_PULL_REQUEST}" = true ] && [ "${TRAVIS_RUST_VERSION}" = nightly ]; then
        cd "${TRAVIS_BUILD_DIR}"/.. &&
        git clone "${REMOTE_URL}" "${TRAVIS_REPO_SLUG}-bench" &&
        cd "${TRAVIS_REPO_SLUG}-bench" &&
        # Bench master
        git checkout master &&
        cargo bench > before &&
        # Bench PR'ing branch
        git checkout "${TRAVIS_COMMIT}" &&
        cargo bench > after &&
        # Compare results
        cargo install --force cargo-benchcmp &&
        cargo benchcmp --include-missing before after
    fi

env:
  global:
    - RUST_BACKTRACE=1
  matrix:
    - FEATURES=""
    - FEATURES="extprim"

matrix:
  allow_failures:
    - rust: nightly
